logging.level.org.springframework = trace
logging.level.reactor.netty.http.client=off
logging.level.org.springframework.web.reactive.function.client=off
#spring.security.user.name=user
#spring.security.user.password=password

jwt.get.token.uri=/authenticate

keycloak.config.client-id=login-app
keycloak.config.authorization-grant-type=authorization_code
keycloak.config.scope=openid
keycloak.config.issuer-uri=http://localhost:9090/realms/SpringBootKeycloak
keycloak.config.user-name-attribute=preferred_username



#spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.config.client-id}
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=${keycloak.config.authorization-grant-type}
#spring.security.oauth2.client.registration.keycloak.scope=${keycloak.config.scope}
#spring.security.oauth2.client.use-resource-role-mappings=true

spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.config.issuer-uri}
spring.security.oauth2.client.provider.keycloak.user-name-attribute=${keycloak.config.user-name-attribute}

#spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.config.issuer-uri}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9090/realms/SpringBootKeycloak/protocol/openid-connect/certs

#spring:
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#           issuer-uri: http://localhost:9090/realms/SpringBootKeycloak
#           jwk-set-uri: http://localhost:9090/realms/SpringBootKeycloak/protocol/openid-connect/certs



spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true